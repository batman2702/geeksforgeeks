#include<bits/stdc++.h>
using namespace std;
struct node 
{
    int data;
    node *left,*right;
};
struct node *newNode(int data)
{
    node *temp=new node;
    temp->data=data;
    temp->left=NULL;
    temp->right=NULL;
    return temp;
}
void create(int parent[],int i,node *created[],node **root)
{
    if(created[i]!=NULL)
    return;
    created[i]=newNode(i);
    if(parent[i]==-1)
    {
        *root=created[i];
        return;
    }
    if(created[parent[i]]==NULL)
    {
        create(parent,parent[i],created,root);
    }
    node *p=created[parent[i]];
    if(p->left==NULL)
    p->left=created[i];
    else
    p->right=created[i];
}
node *createtree(int parent[],int n)
{
    node *created[n];
    for(int i=0;i<n;i++)
    {
        created[i]=NULL;
    }
    node *root=NULL;
    for(int i=0;i<n;i++)
    {
        create(parent,i,created,&root);
    }
    return root;
}
void inorder(node *root)
{
    if(root)
    {
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
    }
}
int main()
{
    int parent[]={-1, 0, 0, 1, 1, 3, 5};
    int n=sizeof(parent)/sizeof(parent[0]);
    node *root=createtree(parent,n);
    inorder(root);
    cout<<endl;
}
