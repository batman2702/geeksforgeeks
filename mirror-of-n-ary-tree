#include<bits/stdc++.h>
using namespace std;
struct node
{
    int data;
    std::vector<node*>child ;
};
struct node *newNode(int data)
{
    node *temp=new node;
    temp->data=data;
    return temp;
}
void mirror(node *root)
{
    if(root==NULL)
    return;
    int n=root->child.size();
    if(n<2)
    return;
    for(int i=0;i<n;i++)
    {
        mirror(root->child[i]);
    }
    reverse(root->child.begin(),root->child.end());
}
void printlevel(node *root)
{
    std::queue<node*> q;
    q.push(root);
    while(!q.empty())
    {
        int n=q.size();
        while(n>0)
        {
        node *temp=q.front();
        q.pop();
        cout<<temp->data<<" ";
        for(int i=0;i<temp->child.size();i++)
        {
            q.push(temp->child[i]);
        }
        n--;
        }
        cout<<endl;
    }
}
int main()
{
    node *root = newNode(10);
    (root->child).push_back(newNode(2));
    (root->child).push_back(newNode(34));
    (root->child).push_back(newNode(56));
    (root->child).push_back(newNode(100));
    (root->child[2]->child).push_back(newNode(1));
    (root->child[3]->child).push_back(newNode(7));
    (root->child[3]->child).push_back(newNode(8));
    (root->child[3]->child).push_back(newNode(9));
    printlevel(root);
    mirror(root);
    printlevel(root);
 
}
