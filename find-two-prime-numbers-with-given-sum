/*algo:
first take an array of size[n+1]
find all primes below n using sieve of eratosthanes
for i=0 to n:
  if(arr[i]&&a[n-i])
  print i,n-i;*/
// practice return two primenumbers->code link http://ideone.com/n8AuHi
#include<bits/stdc++.h>
using namespace std;
bool sieve(int n,bool prime[])
{
    prime[0]=prime[1]=false;
    for(int i=2;i<=n;i++)
    prime[i]=true;
    for(int i=2;i*i<=n;i++)
    {
        if(prime[i])
        {
            for(int p=i*2;p<=n;p+=i)
            {
                prime[p]=false;
            }
        }
    }
}
void primesum(int n)
{
    bool prime[n+1];
    sieve(n,prime);
    for(int i=0;i<n;i++)
    {
        if(prime[i]&&prime[n-i])
        {
        cout<<i<<" "<<n-i<<endl;
        return;
        }
    }
    //cout<<endl;
}
int main()
 {
	//code
	int t;
	cin>>t;
	while(t--)
	{
	    int n;
	    cin>>n;
	    primesum(n);
	}
	return 0;
}
