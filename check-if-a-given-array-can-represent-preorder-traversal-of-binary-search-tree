#include<bits/stdc++.h>
using namespace std;
struct node
{
    int data;
    node *left,*right;
};
struct node *newNode(int data)
{
    node *temp=new node;
    temp->data=data;
    temp->left=NULL;
    temp->right=NULL;
    return temp;
}
bool bst(int pre[],int n)
{
    int root=INT_MIN;
    stack<int>s;
    for(int i=0;i<n;i++)
    {
        if(pre[i]<root)
        return false;
        //s.push(pre[i]);
        while(!s.empty() && pre[i]>s.top())
        {
            root=s.top();
            s.pop();
        }
        s.push(pre[i]);
    }
    return true;
}
int main()
{
    int pre1[] = {40, 30, 35, 80, 100};
    int n = sizeof(pre1)/sizeof(pre1[0]);
    bst(pre1, n)? cout << "true\n":
                              cout << "false\n";
                              int pre2[] = {40, 30, 35, 20, 80, 100};
    n = sizeof(pre2)/sizeof(pre2[0]);
    bst(pre2, n)? cout << "true\n":
                              cout << "false\n";
}
